/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        lparlt: left_paren_lt {
            compatible = "zmk,behavior-mod-morph";
            label = "LEFT_PAREN_LT";
            #binding-cells = <0>;
            bindings = <&kp LPAR>, <&kp LT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

/ {
    behaviors {
        rpargt: right_paren_gt {
            compatible = "zmk,behavior-mod-morph";
            label = "RIGHT_PAREN_GT";
            #binding-cells = <0>;
            bindings = <&kp RPAR>, <&kp GT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB       |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL / ESC |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT       |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ALT  |
//                          | GUI | LWR | SPC |   | ENT | RSE  | DEL |
                        bindings = <
   &kp TAB       &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &mt LCTRL ESC &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT     &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp LALT
                 &kp LGUI &mo 1 &kp SPACE        &lt 1 RET &mo 2 &kp DEL
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB       |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | CTRL / ESC |  `  |  -  |  =  |  (  |  )  |   |     |  4  |  5  |  6  |  \  |  `   |
// | SHFT       |     |  /  |  \  |  [  |  ]  |   |     |  1  |  2  |  3  | "|" |  ~   |
//                          | GUI |     | ALT |   | ENT |     |     |
                        bindings = <
   &kp TAB       &kp N1    &kp N2    &kp N3    &kp N4           &kp N5            &kp N6    &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &mt LCTRL ESC &kp GRAVE &kp MINUS &kp EQUAL &lpartl          &rpargt           &trans    &kp N4   &kp N5 &kp N6    &kp BSLH &kp GRAVE
   &kp LSHFT     &trans    &kp SLASH &kp BSLH  &kp LEFT_BRACKET &kp RIGHT_BRACKET &trans    &kp N1   &kp N2 &kp N3    &kp PIPE &kp TILDE
                                     &kp LGUI  &trans           &kp LALT          &kp RET   &trans   &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB       |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL / ESC | BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT       |     |     |     |     |     |   |     |     |     |     |     |      |
//                          | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB      &kp EXCL     &kp AT       &kp HASH     &kp DLLR     &kp PRCNT      &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR  &kp RPAR &kp BSPC
   &mt LCTRL ESC &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT  &kp DOWN  &kp UP          &kp RIGHT &trans   &trans
   &kp LSHFT     &bt BT_CLR   &trans       &trans       &trans       &trans         &kp HOME  &kp PG_DN &kp PG_UP       &kp END   &trans   &trans
                          	               &kp LGUI     &trans       &kp SPACE      &kp RET   &trans    &kp RALT
                        >;
                };
        };
};
